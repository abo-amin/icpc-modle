@model icpc_modle.Models.ExamViewModel
@{
    ViewData["Title"] = "الامتحان";
}

<!DOCTYPE html>
<html lang="ar">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <style>
        body {
            background-color: #f8f9fa;
            direction: rtl;
            text-align: right;
        }

        .exam-container {
            max-width: 700px;
            margin: auto;
            padding: 20px;
            background: white;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        .question-text {
            font-size: 1.3rem;
            font-weight: bold;
            margin-bottom: 15px;
        }

        .question-img {
            max-width: 100%;
            height: auto;
            margin-bottom: 15px;
            border-radius: 10px;
        }

        .timer {
            font-size: 1.5rem;
            font-weight: bold;
            color: red;
            text-align: center;
            margin-bottom: 15px;
        }

        .form-check-label {
            width: 100%;
            padding: 10px;
            border-radius: 5px;
            cursor: pointer;
            transition: 0.3s;
            background-color: #f8f9fa;
        }

        .form-check-input:checked + .form-check-label {
            background-color: #007bff;
            color: white;
        }

        .form-check-label:hover {
            background-color: #e9ecef;
        }

        .btn-next {
            width: 100%;
            font-size: 1.2rem;
        }

        .footer-text {
            text-align: center;
            font-size: 0.9rem;
            margin-top: 10px;
            color: gray;
        }
    </style>

    <!-- منع الرجوع إلى الصفحة السابقة -->
    <script>
        // إزالة التوجيه المتكرر مؤقتًا
        window.onpopstate = function () {
            window.history.pushState( window.location.href);

        };

        // إيقاف التعديل بعد التقدم
        function disableOptions() {
            const radioButtons = document.querySelectorAll('input[type="radio"]');
            radioButtons.forEach(button => {
                button.disabled = true;
            });
        }

        // تعطيل جميع المدخلات بعد انتهاء الوقت
        function disableInputs() {
            const inputs = document.querySelectorAll('input');
            inputs.forEach(input => {
                input.disabled = true;
            });
            document.querySelector('.btn-next').disabled = true; // تعطيل زر "التالي"
        }
    </script>

</head>
<body>
    <div class="container mt-5">
        <div class="exam-container">
            <h3 class="text-center mb-3">الامتحان</h3>

            <div class="timer" id="timer">الوقت المتبقي: <span id="time-left"></span> ثانية</div>

            <form method="post" asp-action="Exam">
                <input type="hidden" name="questionNumber" value="@Model.QuestionNumber">

                <p class="question-text">@Model.QuestionText</p>

                @if (!string.IsNullOrEmpty(Model.QuestionImageUrl))
                {
                    <img src="@Model.QuestionImageUrl" alt="صورة السؤال" class="question-img">
                }

                <div class="mb-3">
                    @for (int i = 0; i < Model.Choices.Count; i++)
                    {
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="SelectedAnswer" id="option-@i" value="@Model.Choices[i]">
                            <label class="form-check-label" for="option-@i">
                                @Model.Choices[i]
                            </label>
                        </div>
                    }
                </div>

                <button type="submit" class="btn btn-primary btn-next" onclick="disableOptions()">التالي</button>
            </form>

            <p class="footer-text">برمجة بواسطة تيم ICPC ANU Assiut</p>
        </div>
    </div>

    <script>
        let timeLeft = @Model.TimerSeconds; // الزمن المحدد لكل سؤال
        let timerElement = document.getElementById("time-left");

        function updateTimer() {
            if (timeLeft > 0) {
                timeLeft--;
                timerElement.textContent = timeLeft;
            } else {
                document.forms[0].submit(); // إرسال الإجابة تلقائيًا عند انتهاء الوقت
                disableInputs(); // تعطيل المدخلات بعد انتهاء الوقت
            }
        }

        timerElement.textContent = timeLeft;
        setInterval(updateTimer, 1000);
    </script>
</body>
</html>
